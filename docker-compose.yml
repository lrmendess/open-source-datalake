version: '3.9'

x-hive-metastore-uri: &hive-metastore-uri thrift://datalake-hive-metastore:9083

x-s3-auth: &s3-auth
  S3_ENDPOINT: http://datalake-minio:9000
  S3_ACCESS_KEY: ${MINIO_ROOT_USER}
  S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD}

x-commons: &commons
  networks:
    - datalake-network

services:
  minio:
    <<: *commons
    image: minio/minio:latest
    container_name: datalake-minio
    hostname: datalake-minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - datalake-minio-volume:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_ADDRESS: :9000
      MINIO_CONSOLE_ADDRESS: :9001
    command: ["server", "/data"]

  hive-metastore-db:
    <<: *commons
    image: postgres:11
    container_name: datalake-hive-metastore-db
    hostname: datalake-hive-metastore-db
    ports:
      - 5432:5432
    volumes:
      - datalake-hive-metastore-db-volume:/var/lib/postgresql/data
    environment:    
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped

  hive-metastore:
    <<: *commons
    build: ./hive
    container_name: datalake-hive-metastore
    hostname: datalake-hive-metastore
    ports:
      - 9083:9083
    volumes:
      - datalake-hive-metastore-volume:/opt/hive/data/warehouse
    environment:
      <<: *s3-auth
      DB_DRIVER: postgres
      SERVICE_NAME: metastore
      HIVE_METASTORE_URI: *hive-metastore-uri
      HIVE_METASTORE_DB_DRIVER: org.postgresql.Driver
      HIVE_METASTORE_DB_URL: jdbc:postgresql://datalake-hive-metastore-db:5432/${POSTGRES_DB}
      HIVE_METASTORE_DB_USER: ${POSTGRES_USER}
      HIVE_METASTORE_DB_PASSWORD: ${POSTGRES_PASSWORD}
      IS_RESUME: ${IS_RESUME:-false}
    restart: always
    depends_on:
      - hive-metastore-db
      - minio

  trino-coordinator:
    <<: *commons
    image: trinodb/trino:439
    container_name: datalake-trino-coordinator
    hostname: datalake-trino-coordinator
    ports:
      - 8081:8080
    volumes:
      - ./trino/catalog:/etc/trino/catalog:ro
      - ./trino/coordinator/config.properties:/etc/trino/config.properties
    environment:
      <<: *s3-auth
      HIVE_METASTORE_URI: *hive-metastore-uri
    command: bash -c "/default-schemas.sh & /usr/lib/trino/bin/run-trino"
    depends_on:
      - hive-metastore

  trino-worker:
    <<: *commons
    image: trinodb/trino:439
    volumes:
      - ./trino/catalog:/etc/trino/catalog:ro
      - ./trino/worker/config.properties:/etc/trino/config.properties
    environment:
      <<: *s3-auth
      HIVE_METASTORE_URI: *hive-metastore-uri
    depends_on:
      - trino-coordinator

  spark-master:
    <<: *commons
    image: datalake-spark-image
    build:
      context: ./spark
      args:
        <<: *s3-auth
        HIVE_METASTORE_URI: *hive-metastore-uri
        SPARK_MASTER_URL: spark://datalake-spark-master:7077
    container_name: datalake-spark-master
    hostname: datalake-spark-master
    environment: &spark-env
      SPARK_MODE: master
      SPARK_RPC_AUTHENTICATION_ENABLED: 'no'
      SPARK_RPC_ENCRYPTION_ENABLED: 'no'
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: 'no'
      SPARK_SSL_ENABLED: 'no'
      SPARK_USER: spark
    ports:
      - 8082:8080
      - 7077:7077
      - 6066:6066
      - 4040:4040

  spark-worker:
    <<: *commons
    image: datalake-spark-image
    environment:
      <<: *spark-env
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://datalake-spark-master:7077
      SPARK_WORKER_MEMORY: 2G
      SPARK_WORKER_CORES: 1
    depends_on:
      - spark-master

volumes:
  datalake-minio-volume:
    driver: local
  datalake-hive-metastore-db-volume:
    driver: local
  datalake-hive-metastore-volume:
    driver: local

networks:
  datalake-network:
    name: datalake-network
    external: true
